name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main # Or your default branch
  workflow_dispatch: # Allow manual triggering

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: "latest" # Specify a recent Hugo version
      GO_VERSION: "1.21"    # Specify Go version for Hugo Modules
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false # Set to true if you were using git submodules for themes

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: "${{ env.HUGO_VERSION }}"
          extended: true # PaperMod requires the extended version

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "${{ env.GO_VERSION }}"
      
      - name: Initialize Hugo Modules and Get Theme
        run: |
          # Ensure go.mod is correctly initialized for the repository
          # The existing go.mod has "module my-tech-blog/my-tech-blog"
          # We should use the actual GitHub repository name for module path
          # Check if go.mod exists and has the correct module path
          if [ -f go.mod ]; then
            # If go.mod exists, ensure it has the correct module path or re-initialize
            # For simplicity, let's re-initialize if the path is not the dynamic one.
            # A more robust check would be `grep -q "module github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}" go.mod`
            # If not found, then re-init. For now, we'll assume it might need re-init or the existing one is fine.
            # The simplest approach is to ensure `hugo mod init` runs if go.mod is not what's expected,
            # but `hugo mod init` fails if go.mod already exists.
            # Let's try to update the go.mod created in a previous step using sed, then run get and vendor.
            # This is safer than re-initializing if other dependencies were ever added.
            # The original go.mod was "module my-tech-blog/my-tech-blog"
            sed -i 's|module my-tech-blog/my-tech-blog|module github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}|' go.mod
            echo "Updated go.mod module path:"
            cat go.mod
          else
            echo "go.mod not found, initializing..."
            hugo mod init github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}
          fi
          
          echo "Tidying Hugo modules (resolving PaperMod theme from hugo.yaml)..."
          hugo mod tidy # This should resolve imports from hugo.yaml and update go.mod/go.sum
          
          echo "--- go.mod content ---"
          cat go.mod
          echo "--- go.sum content ---"
          cat go.sum || echo "go.sum not found" # go.sum might not exist until 'hugo mod tidy' or after build
          
          echo "Vendoring Hugo modules..."
          hugo mod vendor
          
          echo "--- _vendor directory listing (top level) ---"
          ls -R _vendor/ | head -n 20 # List top-level contents of _vendor
          # Verify theme is downloaded and vendored
          echo "--- Verifying vendored PaperMod theme contents ---"
          if [ -d "_vendor/github.com/adityatelange/hugo-PaperMod/layouts/partials" ]; then
            echo "PaperMod theme's layouts/partials directory successfully found in _vendor."
            echo "Sample of vendored theme partials:"
            ls "_vendor/github.com/adityatelange/hugo-PaperMod/layouts/partials/" | head -n 5
          else
            echo "Error: PaperMod theme's layouts/partials directory NOT found in _vendor."
            echo "Full _vendor listing:"
            ls -R _vendor/
            exit 1 
          fi

      - name: Build Hugo site
        env:
          # HUGO_ENV: production # Already set by default by actions-hugo
          # Set the base URL dynamically for GitHub Pages
          HUGO_BASEURL: "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
        run: |
          echo "Current directory listing before cleaning themes/ and building:"
          ls -la
          echo "Removing themes/ directory to ensure Hugo uses modules..."
          rm -rf themes/
          echo "Current directory listing after cleaning themes/:"
          ls -la
          echo "Building site with baseURL: ${HUGO_BASEURL}"
          hugo --minify --baseURL "${HUGO_BASEURL}"
          # Verify public directory
          echo "Public directory listing:"
          ls public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          # publish_branch: gh-pages # Default is gh-pages
          # cname: example.com # Custom domain if you have one
          # force_orphan: true # Creates a new branch history every time
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: "Deploy Hugo site to Pages (commit ${{ github.sha }})"
